// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "vision.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace bites {
namespace vision {

namespace {

const ::google::protobuf::Descriptor* Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Image_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Image_Encoding_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Landmark_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Landmark_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Landmark_ID_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Landmark_IDCertainty_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Landmark_DistanceCertainty_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DistanceBearing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DistanceBearing_reflection_ = NULL;
const ::google::protobuf::Descriptor* Detection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Detection_reflection_ = NULL;
const ::google::protobuf::Descriptor* Line_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Line_reflection_ = NULL;
const ::google::protobuf::Descriptor* Line_LinePoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Line_LinePoint_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Line_ScanDirection_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Corner_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Corner_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Corner_Shape_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Cross_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cross_reflection_ = NULL;
const ::google::protobuf::Descriptor* CrossBar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CrossBar_reflection_ = NULL;
const ::google::protobuf::Descriptor* FieldObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FieldObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Robot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Robot_reflection_ = NULL;
const ::google::protobuf::Descriptor* Ball_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Ball_reflection_ = NULL;
const ::google::protobuf::Descriptor* Frame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Frame_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_vision_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  Image_descriptor_ = file->message_type(0);
  Image::default_instance_ = new Image();
  static const int Image_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, encoding_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, data_),
  };
  Image_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Image_descriptor_,
      Image::default_instance_,
      Image_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Image));
  Image_Encoding_descriptor_ = Image_descriptor_->enum_type(0);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Image_descriptor_, Image::default_instance_);
  Landmark_descriptor_ = file->message_type(1);
  Landmark::default_instance_ = new Landmark();
  static const int Landmark_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, field_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, field_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, id_certainty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, distance_certainty_),
  };
  Landmark_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Landmark_descriptor_,
      Landmark::default_instance_,
      Landmark_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Landmark, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Landmark));
  Landmark_ID_descriptor_ = Landmark_descriptor_->enum_type(0);
  Landmark_IDCertainty_descriptor_ = Landmark_descriptor_->enum_type(1);
  Landmark_DistanceCertainty_descriptor_ = Landmark_descriptor_->enum_type(2);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Landmark_descriptor_, Landmark::default_instance_);
  DistanceBearing_descriptor_ = file->message_type(2);
  DistanceBearing::default_instance_ = new DistanceBearing();
  static const int DistanceBearing_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, bearing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, distance_sd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, bearing_sd_),
  };
  DistanceBearing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DistanceBearing_descriptor_,
      DistanceBearing::default_instance_,
      DistanceBearing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DistanceBearing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(DistanceBearing));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DistanceBearing_descriptor_, DistanceBearing::default_instance_);
  Detection_descriptor_ = file->message_type(3);
  Detection::default_instance_ = new Detection();
  static const int Detection_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, center_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, center_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, angle_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, angle_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, foc_dist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, elevation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, db_),
  };
  Detection_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Detection_descriptor_,
      Detection::default_instance_,
      Detection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Detection, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Detection));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Detection_descriptor_, Detection::default_instance_);
  Line_descriptor_ = file->message_type(4);
  Line::default_instance_ = new Line();
  static const int Line_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, possibles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, avg_vertical_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, avg_horizontal_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, thinnest_hor_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, thickest_hor_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, thinnest_vert_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, thickest_vert_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, db_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, cc_line_),
  };
  Line_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Line_descriptor_,
      Line::default_instance_,
      Line_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Line));
  Line_LinePoint_descriptor_ = Line_descriptor_->nested_type(0);
  Line_LinePoint::default_instance_ = new Line_LinePoint();
  static const int Line_LinePoint_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, line_width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, found_with_scan_),
  };
  Line_LinePoint_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Line_LinePoint_descriptor_,
      Line_LinePoint::default_instance_,
      Line_LinePoint_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Line_LinePoint, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Line_LinePoint));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Line_LinePoint_descriptor_, Line_LinePoint::default_instance_);
  Line_ScanDirection_descriptor_ = Line_descriptor_->enum_type(0);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Line_descriptor_, Line::default_instance_);
  Corner_descriptor_ = file->message_type(5);
  Corner::default_instance_ = new Corner();
  static const int Corner_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, possibles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, lines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, dists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, t_lines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, angle_between_lines_),
  };
  Corner_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Corner_descriptor_,
      Corner::default_instance_,
      Corner_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Corner, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Corner));
  Corner_Shape_descriptor_ = Corner_descriptor_->enum_type(0);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Corner_descriptor_, Corner::default_instance_);
  Cross_descriptor_ = file->message_type(6);
  Cross::default_instance_ = new Cross();
  static const int Cross_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, possibles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, bounds_),
  };
  Cross_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Cross_descriptor_,
      Cross::default_instance_,
      Cross_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cross, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Cross));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Cross_descriptor_, Cross::default_instance_);
  CrossBar_descriptor_ = file->message_type(7);
  CrossBar::default_instance_ = new CrossBar();
  static const int CrossBar_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrossBar, detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrossBar, bounds_),
  };
  CrossBar_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CrossBar_descriptor_,
      CrossBar::default_instance_,
      CrossBar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrossBar, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrossBar, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(CrossBar));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CrossBar_descriptor_, CrossBar::default_instance_);
  FieldObject_descriptor_ = file->message_type(8);
  FieldObject::default_instance_ = new FieldObject();
  static const int FieldObject_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldObject, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldObject, possibles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldObject, bounds_),
  };
  FieldObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FieldObject_descriptor_,
      FieldObject::default_instance_,
      FieldObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(FieldObject));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FieldObject_descriptor_, FieldObject::default_instance_);
  Robot_descriptor_ = file->message_type(9);
  Robot::default_instance_ = new Robot();
  static const int Robot_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, bounds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, back_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, back_right_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, back_dir_),
  };
  Robot_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Robot_descriptor_,
      Robot::default_instance_,
      Robot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Robot, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Robot));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Robot_descriptor_, Robot::default_instance_);
  Ball_descriptor_ = file->message_type(10);
  Ball::default_instance_ = new Ball();
  static const int Ball_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball, detect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball, radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball, confidence_),
  };
  Ball_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Ball_descriptor_,
      Ball::default_instance_,
      Ball_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ball, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Ball));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Ball_descriptor_, Ball::default_instance_);
  Frame_descriptor_ = file->message_type(11);
  Frame::default_instance_ = new Frame();
  static const int Frame_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, balls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, lines_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, corners_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, robots_),
  };
  Frame_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Frame_descriptor_,
      Frame::default_instance_,
      Frame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(Frame));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Frame_descriptor_, Frame::default_instance_);
  Image::default_instance_->InitAsDefaultInstance();
  Landmark::default_instance_->InitAsDefaultInstance();
  DistanceBearing::default_instance_->InitAsDefaultInstance();
  Detection::default_instance_->InitAsDefaultInstance();
  Line::default_instance_->InitAsDefaultInstance();
  Line_LinePoint::default_instance_->InitAsDefaultInstance();
  Corner::default_instance_->InitAsDefaultInstance();
  Cross::default_instance_->InitAsDefaultInstance();
  CrossBar::default_instance_->InitAsDefaultInstance();
  FieldObject::default_instance_->InitAsDefaultInstance();
  Robot::default_instance_->InitAsDefaultInstance();
  Ball::default_instance_->InitAsDefaultInstance();
  Frame::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_vision_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  ::bites::protobuf_BuildDesc_structs_2eproto();
  pool->InternalBuildGeneratedFile(
    "\n\014vision.proto\022\014bites.vision\032\rstructs.pr"
    "oto\"\241\001\n\005Image\0226\n\010encoding\030\001 \002(\0162\034.bites."
    "vision.Image.Encoding:\006YUV422\022\r\n\005width\030\002"
    " \002(\005\022\016\n\006height\030\003 \002(\005\022\014\n\004data\030\004 \002(\014\"3\n\010En"
    "coding\022\t\n\005YCbCr\020\001\022\n\n\006YUV422\020\002\022\007\n\003RGB\020\003\022\007"
    "\n\003BMP\020\004\"\240\016\n\010Landmark\022%\n\002id\030\001 \002(\0162\031.bites"
    ".vision.Landmark.ID\022\017\n\007field_x\030\002 \002(\002\022\017\n\007"
    "field_y\030\003 \002(\002\0228\n\014id_certainty\030\004 \001(\0162\".bi"
    "tes.vision.Landmark.IDCertainty\022D\n\022dista"
    "nce_certainty\030\005 \001(\0162(.bites.vision.Landm"
    "ark.DistanceCertainty\"\262\013\n\002ID\022\022\n\016L_INNER_"
    "CORNER\020\000\022\022\n\016L_OUTER_CORNER\020\001\022\014\n\010T_CORNER"
    "\020\002\022\021\n\rCENTER_CIRCLE\020\003\022\017\n\013BLUE_GOAL_T\020\004\022\021"
    "\n\rYELLOW_GOAL_T\020\005\022+\n\'BLUE_GOAL_RIGHT_L_O"
    "R_YELLOW_GOAL_LEFT_L\020\006\022+\n\'BLUE_GOAL_LEFT"
    "_L_OR_YELLOW_GOAL_RIGHT_L\020\007\022/\n+BLUE_CORN"
    "ER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L\020\010\022/\n+"
    "BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TO"
    "P_L\020\t\022\022\n\016CORNER_INNER_L\020\n\022\024\n\020GOAL_BOX_IN"
    "NER_L\020\013\022\025\n\021BLUE_GOAL_OUTER_L\020\014\022\027\n\023YELLOW"
    "_GOAL_OUTER_L\020\r\022\014\n\010CENTER_T\020\016\022\025\n\021BLUE_CO"
    "RNER_TOP_L\020\017\022\030\n\024BLUE_CORNER_BOTTOM_L\020\020\022\024"
    "\n\020BLUE_GOAL_LEFT_T\020\021\022\025\n\021BLUE_GOAL_RIGHT_"
    "T\020\022\022\024\n\020BLUE_GOAL_LEFT_L\020\023\022\025\n\021BLUE_GOAL_R"
    "IGHT_L\020\024\022\023\n\017CENTER_BOTTOM_T\020\025\022\020\n\014CENTER_"
    "TOP_T\020\026\022\032\n\026YELLOW_CORNER_BOTTOM_L\020\027\022\027\n\023Y"
    "ELLOW_CORNER_TOP_L\020\030\022\026\n\022YELLOW_GOAL_LEFT"
    "_T\020\031\022\027\n\023YELLOW_GOAL_RIGHT_T\020\032\022\026\n\022YELLOW_"
    "GOAL_LEFT_L\020\033\022\027\n\023YELLOW_GOAL_RIGHT_L\020\034\022\025"
    "\n\021CORNER_NO_IDEA_ID\020\035\022\n\n\006TOP_CC\020\036\022\r\n\tBOT"
    "TOM_CC\020\037\022\027\n\023BLUE_GOAL_LEFT_POST\020(\022\030\n\024BLU"
    "E_GOAL_RIGHT_POST\020)\022\031\n\025YELLOW_GOAL_LEFT_"
    "POST\020*\022\032\n\026YELLOW_GOAL_RIGHT_POST\020+\022\022\n\016BL"
    "UE_GOAL_POST\020,\022\024\n\020YELLOW_GOAL_POST\020-\022\030\n\024"
    "UNKNOWN_FIELD_OBJECT\020.\022\020\n\014UNKNOWN_LINE\0202"
    "\022\023\n\017SIDE_OR_ENDLINE\0203\022\021\n\rSIDELINE_LINE\0204"
    "\022\020\n\014ENDLINE_LINE\0205\022\020\n\014GOALBOX_LINE\0206\022\025\n\021"
    "GOALBOX_SIDE_LINE\0207\022\024\n\020GOALBOX_TOP_LINE\020"
    "8\022\025\n\021BLUE_GOAL_ENDLINE\0209\022\027\n\023YELLOW_GOAL_"
    "ENDLINE\020:\022\030\n\024BLUE_YELLOW_SIDELINE\020;\022\030\n\024Y"
    "ELLOW_BLUE_SIDELINE\020<\022\025\n\021CENTER_FIELD_LI"
    "NE\020=\022\031\n\025BLUE_GOALBOX_TOP_LINE\020>\022\032\n\026BLUE_"
    "GOALBOX_LEFT_LINE\020?\022\033\n\027BLUE_GOALBOX_RIGH"
    "T_LINE\020@\022\033\n\027YELLOW_GOALBOX_TOP_LINE\020A\022\034\n"
    "\030YELLOW_GOALBOX_LEFT_LINE\020A\022\035\n\031YELLOW_GO"
    "ALBOX_RIGHT_LINE\020B\022\023\n\017BLUE_GOAL_CROSS\020P\022"
    "\025\n\021YELLOW_GOAL_CROSS\020Q\022\022\n\016ABSTRACT_CROSS"
    "\020R\"6\n\013IDCertainty\022\014\n\010NOT_SURE\020\000\022\016\n\nMILDY"
    "_SURE\020\001\022\t\n\005_SURE\020\002\"X\n\021DistanceCertainty\022"
    "\017\n\013BOTH_UNSURE\020\000\022\020\n\014WIDTH_UNSURE\020\001\022\021\n\rHE"
    "IGHT_UNSURE\020\002\022\r\n\tBOTH_SURE\020\003*\004\010\n\020e\"]\n\017Di"
    "stanceBearing\022\020\n\010distance\030\001 \002(\002\022\017\n\007beari"
    "ng\030\002 \002(\002\022\023\n\013distance_sd\030\003 \002(\002\022\022\n\nbearing"
    "_sd\030\004 \002(\002\"\335\001\n\tDetection\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030"
    "\002 \002(\005\022\r\n\005width\030\003 \002(\002\022\016\n\006height\030\004 \002(\002\022\020\n\010"
    "center_x\030\005 \002(\005\022\020\n\010center_y\030\006 \002(\005\022\017\n\007angl"
    "e_x\030\007 \002(\002\022\017\n\007angle_y\030\010 \002(\002\022\020\n\010foc_dist\030\t"
    " \002(\002\022\021\n\televation\030\n \002(\002\022)\n\002db\030\013 \002(\0132\035.bi"
    "tes.vision.DistanceBearing*\005\010\024\020\311\001\"\242\006\n\004Li"
    "ne\022$\n\004self\030\001 \002(\0132\026.bites.vision.Landmark"
    "\022)\n\tpossibles\030\002 \003(\0132\026.bites.vision.Landm"
    "ark\022,\n\006points\030\003 \003(\0132\034.bites.vision.Line."
    "LinePoint\022\r\n\005angle\030\004 \001(\002\022\t\n\001a\030\005 \001(\002\022\t\n\001b"
    "\030\006 \001(\002\022\016\n\006length\030\007 \001(\002\022\032\n\022avg_vertical_w"
    "idth\030\010 \001(\002\022\034\n\024avg_horizontal_width\030\t \001(\002"
    "\0228\n\022thinnest_hor_point\030\n \001(\0132\034.bites.vis"
    "ion.Line.LinePoint\0228\n\022thickest_hor_point"
    "\030\013 \001(\0132\034.bites.vision.Line.LinePoint\0229\n\023"
    "thinnest_vert_point\030\014 \001(\0132\034.bites.vision"
    ".Line.LinePoint\0229\n\023thickest_vert_point\030\r"
    " \001(\0132\034.bites.vision.Line.LinePoint\022)\n\002db"
    "\030\016 \002(\0132\035.bites.vision.DistanceBearing\022\017\n"
    "\007cc_line\030\017 \002(\010\032\202\001\n\tLinePoint\022\t\n\001x\030\001 \002(\005\022"
    "\t\n\001y\030\002 \002(\005\022\022\n\nline_width\030\003 \002(\002\022\020\n\010distan"
    "ce\030\004 \002(\002\0229\n\017found_with_scan\030\005 \002(\0162 .bite"
    "s.vision.Line.ScanDirection\"-\n\rScanDirec"
    "tion\022\016\n\nHORIZONTAL\020\000\022\014\n\010VERTICAL\020\0012(\n\010fi"
    "eld_x2\022\026.bites.vision.Landmark\030\n \001(\0022(\n\010"
    "field_y2\022\026.bites.vision.Landmark\030\013 \001(\002\"\310"
    "\003\n\006Corner\022$\n\004self\030\001 \002(\0132\026.bites.vision.L"
    "andmark\022\'\n\006detect\030\002 \002(\0132\027.bites.vision.D"
    "etection\022)\n\tpossibles\030\003 \003(\0132\026.bites.visi"
    "on.Landmark\022!\n\005lines\030\004 \003(\0132\022.bites.visio"
    "n.Line\022\r\n\005dists\030\005 \003(\002\022#\n\007t_lines\030\006 \003(\0132\022"
    ".bites.vision.Line\022\033\n\023angle_between_line"
    "s\030\007 \002(\002\"A\n\005Shape\022\013\n\007INNER_L\020\000\022\013\n\007OUTER_L"
    "\020\001\022\005\n\001T\020\002\022\n\n\006CIRCLE\020\003\022\013\n\007UNKNOWN\020\0042G\n\013co"
    "rner_type\022\026.bites.vision.Landmark\030\014 \001(\0162"
    "\032.bites.vision.Corner.Shape2D\n\014corner_li"
    "nes\022\026.bites.vision.Landmark\030\r \003(\0132\026.bite"
    "s.vision.Landmark\"\243\001\n\005Cross\022$\n\004self\030\001 \002("
    "\0132\026.bites.vision.Landmark\022\'\n\006detect\030\002 \002("
    "\0132\027.bites.vision.Detection\022)\n\tpossibles\030"
    "\003 \003(\0132\026.bites.vision.Landmark\022 \n\006bounds\030"
    "\004 \002(\0132\020.bites.Rectangle\"U\n\010CrossBar\022\'\n\006d"
    "etect\030\001 \002(\0132\027.bites.vision.Detection\022 \n\006"
    "bounds\030\002 \002(\0132\020.bites.Rectangle\"\200\001\n\013Field"
    "Object\022$\n\004self\030\001 \002(\0132\026.bites.vision.Land"
    "mark\022)\n\tpossibles\030\002 \002(\0132\026.bites.vision.L"
    "andmark\022 \n\006bounds\030\003 \002(\0132\020.bites.Rectangl"
    "e\"\213\001\n\005Robot\022\'\n\006detect\030\001 \002(\0132\027.bites.visi"
    "on.Detection\022 \n\006bounds\030\002 \002(\0132\020.bites.Rec"
    "tangle\022\021\n\tback_left\030\003 \002(\005\022\022\n\nback_right\030"
    "\004 \002(\005\022\020\n\010back_dir\030\005 \002(\005\"S\n\004Ball\022\'\n\006detec"
    "t\030\001 \002(\0132\027.bites.vision.Detection\022\016\n\006radi"
    "us\030\002 \002(\002\022\022\n\nconfidence\030\003 \002(\005\"\351\001\n\005Frame\022\""
    "\n\005image\030\001 \001(\0132\023.bites.vision.Image\022!\n\005ba"
    "lls\030\002 \003(\0132\022.bites.vision.Ball\022*\n\007objects"
    "\030\003 \003(\0132\031.bites.vision.FieldObject\022!\n\005lin"
    "es\030\004 \003(\0132\022.bites.vision.Line\022%\n\007corners\030"
    "\005 \003(\0132\024.bites.vision.Corner\022#\n\006robots\030\006 "
    "\003(\0132\023.bites.vision.Robot", 4464,
  &protobuf_BuildDesc_vision_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_vision_2eproto {
  StaticDescriptorInitializer_vision_2eproto() {
    protobuf_BuildDesc_vision_2eproto();
  }
} static_descriptor_initializer_vision_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* Image_Encoding_descriptor() {
  if (Image_Encoding_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Image_Encoding_descriptor_;
}
bool Image_Encoding_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Image_Encoding Image::YCbCr;
const Image_Encoding Image::YUV422;
const Image_Encoding Image::RGB;
const Image_Encoding Image::BMP;
const Image_Encoding Image::Encoding_MIN;
const Image_Encoding Image::Encoding_MAX;
#endif  // _MSC_VER



const ::std::string Image::_default_data_;
Image::Image()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    encoding_(2),
    width_(0),
    height_(0),
    data_(const_cast< ::std::string*>(&_default_data_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Image::InitAsDefaultInstance() {}

Image::Image(const Image& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    encoding_(2),
    width_(0),
    height_(0),
    data_(const_cast< ::std::string*>(&_default_data_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Image::~Image() {
  if (data_ != &_default_data_) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Image::descriptor() {
  if (Image_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Image_descriptor_;
}

const Image& Image::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Image* Image::default_instance_ = NULL;

Image* Image::New() const {
  return new Image;
}

const ::google::protobuf::Descriptor* Image::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Image::GetReflection() const {
  if (Image_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Image_reflection_;
}

// ===================================================================

const ::google::protobuf::EnumDescriptor* Landmark_ID_descriptor() {
  if (Landmark_ID_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Landmark_ID_descriptor_;
}
bool Landmark_ID_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 80:
    case 81:
    case 82:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Landmark_ID Landmark::L_INNER_CORNER;
const Landmark_ID Landmark::L_OUTER_CORNER;
const Landmark_ID Landmark::T_CORNER;
const Landmark_ID Landmark::CENTER_CIRCLE;
const Landmark_ID Landmark::BLUE_GOAL_T;
const Landmark_ID Landmark::YELLOW_GOAL_T;
const Landmark_ID Landmark::BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L;
const Landmark_ID Landmark::BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L;
const Landmark_ID Landmark::BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L;
const Landmark_ID Landmark::BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L;
const Landmark_ID Landmark::CORNER_INNER_L;
const Landmark_ID Landmark::GOAL_BOX_INNER_L;
const Landmark_ID Landmark::BLUE_GOAL_OUTER_L;
const Landmark_ID Landmark::YELLOW_GOAL_OUTER_L;
const Landmark_ID Landmark::CENTER_T;
const Landmark_ID Landmark::BLUE_CORNER_TOP_L;
const Landmark_ID Landmark::BLUE_CORNER_BOTTOM_L;
const Landmark_ID Landmark::BLUE_GOAL_LEFT_T;
const Landmark_ID Landmark::BLUE_GOAL_RIGHT_T;
const Landmark_ID Landmark::BLUE_GOAL_LEFT_L;
const Landmark_ID Landmark::BLUE_GOAL_RIGHT_L;
const Landmark_ID Landmark::CENTER_BOTTOM_T;
const Landmark_ID Landmark::CENTER_TOP_T;
const Landmark_ID Landmark::YELLOW_CORNER_BOTTOM_L;
const Landmark_ID Landmark::YELLOW_CORNER_TOP_L;
const Landmark_ID Landmark::YELLOW_GOAL_LEFT_T;
const Landmark_ID Landmark::YELLOW_GOAL_RIGHT_T;
const Landmark_ID Landmark::YELLOW_GOAL_LEFT_L;
const Landmark_ID Landmark::YELLOW_GOAL_RIGHT_L;
const Landmark_ID Landmark::CORNER_NO_IDEA_ID;
const Landmark_ID Landmark::TOP_CC;
const Landmark_ID Landmark::BOTTOM_CC;
const Landmark_ID Landmark::BLUE_GOAL_LEFT_POST;
const Landmark_ID Landmark::BLUE_GOAL_RIGHT_POST;
const Landmark_ID Landmark::YELLOW_GOAL_LEFT_POST;
const Landmark_ID Landmark::YELLOW_GOAL_RIGHT_POST;
const Landmark_ID Landmark::BLUE_GOAL_POST;
const Landmark_ID Landmark::YELLOW_GOAL_POST;
const Landmark_ID Landmark::UNKNOWN_FIELD_OBJECT;
const Landmark_ID Landmark::UNKNOWN_LINE;
const Landmark_ID Landmark::SIDE_OR_ENDLINE;
const Landmark_ID Landmark::SIDELINE_LINE;
const Landmark_ID Landmark::ENDLINE_LINE;
const Landmark_ID Landmark::GOALBOX_LINE;
const Landmark_ID Landmark::GOALBOX_SIDE_LINE;
const Landmark_ID Landmark::GOALBOX_TOP_LINE;
const Landmark_ID Landmark::BLUE_GOAL_ENDLINE;
const Landmark_ID Landmark::YELLOW_GOAL_ENDLINE;
const Landmark_ID Landmark::BLUE_YELLOW_SIDELINE;
const Landmark_ID Landmark::YELLOW_BLUE_SIDELINE;
const Landmark_ID Landmark::CENTER_FIELD_LINE;
const Landmark_ID Landmark::BLUE_GOALBOX_TOP_LINE;
const Landmark_ID Landmark::BLUE_GOALBOX_LEFT_LINE;
const Landmark_ID Landmark::BLUE_GOALBOX_RIGHT_LINE;
const Landmark_ID Landmark::YELLOW_GOALBOX_TOP_LINE;
const Landmark_ID Landmark::YELLOW_GOALBOX_LEFT_LINE;
const Landmark_ID Landmark::YELLOW_GOALBOX_RIGHT_LINE;
const Landmark_ID Landmark::BLUE_GOAL_CROSS;
const Landmark_ID Landmark::YELLOW_GOAL_CROSS;
const Landmark_ID Landmark::ABSTRACT_CROSS;
const Landmark_ID Landmark::ID_MIN;
const Landmark_ID Landmark::ID_MAX;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Landmark_IDCertainty_descriptor() {
  if (Landmark_IDCertainty_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Landmark_IDCertainty_descriptor_;
}
bool Landmark_IDCertainty_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Landmark_IDCertainty Landmark::NOT_SURE;
const Landmark_IDCertainty Landmark::MILDY_SURE;
const Landmark_IDCertainty Landmark::_SURE;
const Landmark_IDCertainty Landmark::IDCertainty_MIN;
const Landmark_IDCertainty Landmark::IDCertainty_MAX;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Landmark_DistanceCertainty_descriptor() {
  if (Landmark_DistanceCertainty_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Landmark_DistanceCertainty_descriptor_;
}
bool Landmark_DistanceCertainty_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Landmark_DistanceCertainty Landmark::BOTH_UNSURE;
const Landmark_DistanceCertainty Landmark::WIDTH_UNSURE;
const Landmark_DistanceCertainty Landmark::HEIGHT_UNSURE;
const Landmark_DistanceCertainty Landmark::BOTH_SURE;
const Landmark_DistanceCertainty Landmark::DistanceCertainty_MIN;
const Landmark_DistanceCertainty Landmark::DistanceCertainty_MAX;
#endif  // _MSC_VER





Landmark::Landmark()
  : ::google::protobuf::Message(),
    _extensions_(&Landmark_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0),
    id_(0),
    field_x_(0),
    field_y_(0),
    id_certainty_(0),
    distance_certainty_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Landmark::InitAsDefaultInstance() {}

Landmark::Landmark(const Landmark& from)
  : ::google::protobuf::Message(),
    _extensions_(&Landmark_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0),
    id_(0),
    field_x_(0),
    field_y_(0),
    id_certainty_(0),
    distance_certainty_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Landmark::~Landmark() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Landmark::descriptor() {
  if (Landmark_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Landmark_descriptor_;
}

const Landmark& Landmark::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Landmark* Landmark::default_instance_ = NULL;

Landmark* Landmark::New() const {
  return new Landmark;
}

const ::google::protobuf::Descriptor* Landmark::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Landmark::GetReflection() const {
  if (Landmark_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Landmark_reflection_;
}

// ===================================================================





DistanceBearing::DistanceBearing()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    distance_(0),
    bearing_(0),
    distance_sd_(0),
    bearing_sd_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void DistanceBearing::InitAsDefaultInstance() {}

DistanceBearing::DistanceBearing(const DistanceBearing& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    distance_(0),
    bearing_(0),
    distance_sd_(0),
    bearing_sd_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

DistanceBearing::~DistanceBearing() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* DistanceBearing::descriptor() {
  if (DistanceBearing_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return DistanceBearing_descriptor_;
}

const DistanceBearing& DistanceBearing::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

DistanceBearing* DistanceBearing::default_instance_ = NULL;

DistanceBearing* DistanceBearing::New() const {
  return new DistanceBearing;
}

const ::google::protobuf::Descriptor* DistanceBearing::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* DistanceBearing::GetReflection() const {
  if (DistanceBearing_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return DistanceBearing_reflection_;
}

// ===================================================================












Detection::Detection()
  : ::google::protobuf::Message(),
    _extensions_(&Detection_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0),
    x_(0),
    y_(0),
    width_(0),
    height_(0),
    center_x_(0),
    center_y_(0),
    angle_x_(0),
    angle_y_(0),
    foc_dist_(0),
    elevation_(0),
    db_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Detection::InitAsDefaultInstance() {  db_ = const_cast< ::bites::vision::DistanceBearing*>(&::bites::vision::DistanceBearing::default_instance());
}

Detection::Detection(const Detection& from)
  : ::google::protobuf::Message(),
    _extensions_(&Detection_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0),
    x_(0),
    y_(0),
    width_(0),
    height_(0),
    center_x_(0),
    center_y_(0),
    angle_x_(0),
    angle_y_(0),
    foc_dist_(0),
    elevation_(0),
    db_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Detection::~Detection() {
  if (this != default_instance_) {
    delete db_;
  }
}

const ::google::protobuf::Descriptor* Detection::descriptor() {
  if (Detection_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Detection_descriptor_;
}

const Detection& Detection::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Detection* Detection::default_instance_ = NULL;

Detection* Detection::New() const {
  return new Detection;
}

const ::google::protobuf::Descriptor* Detection::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Detection::GetReflection() const {
  if (Detection_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Detection_reflection_;
}

// ===================================================================

const ::google::protobuf::EnumDescriptor* Line_ScanDirection_descriptor() {
  if (Line_ScanDirection_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Line_ScanDirection_descriptor_;
}
bool Line_ScanDirection_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Line_ScanDirection Line::HORIZONTAL;
const Line_ScanDirection Line::VERTICAL;
const Line_ScanDirection Line::ScanDirection_MIN;
const Line_ScanDirection Line::ScanDirection_MAX;
#endif  // _MSC_VER





Line_LinePoint::Line_LinePoint()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    x_(0),
    y_(0),
    line_width_(0),
    distance_(0),
    found_with_scan_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Line_LinePoint::InitAsDefaultInstance() {}

Line_LinePoint::Line_LinePoint(const Line_LinePoint& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    x_(0),
    y_(0),
    line_width_(0),
    distance_(0),
    found_with_scan_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Line_LinePoint::~Line_LinePoint() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* Line_LinePoint::descriptor() {
  if (Line_LinePoint_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Line_LinePoint_descriptor_;
}

const Line_LinePoint& Line_LinePoint::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Line_LinePoint* Line_LinePoint::default_instance_ = NULL;

Line_LinePoint* Line_LinePoint::New() const {
  return new Line_LinePoint;
}

const ::google::protobuf::Descriptor* Line_LinePoint::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Line_LinePoint::GetReflection() const {
  if (Line_LinePoint_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Line_LinePoint_reflection_;
}

// -------------------------------------------------------------------
















::google::protobuf::internal::ExtensionIdentifier< ::bites::vision::Landmark,
  ::google::protobuf::internal::PrimitiveTypeTraits< float > > Line::field_x2(10);
::google::protobuf::internal::ExtensionIdentifier< ::bites::vision::Landmark,
  ::google::protobuf::internal::PrimitiveTypeTraits< float > > Line::field_y2(11);
Line::Line()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    angle_(0),
    a_(0),
    b_(0),
    length_(0),
    avg_vertical_width_(0),
    avg_horizontal_width_(0),
    thinnest_hor_point_(NULL),
    thickest_hor_point_(NULL),
    thinnest_vert_point_(NULL),
    thickest_vert_point_(NULL),
    db_(NULL),
    cc_line_(false) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Line::InitAsDefaultInstance() {  self_ = const_cast< ::bites::vision::Landmark*>(&::bites::vision::Landmark::default_instance());
  thinnest_hor_point_ = const_cast< ::bites::vision::Line_LinePoint*>(&::bites::vision::Line_LinePoint::default_instance());
  thickest_hor_point_ = const_cast< ::bites::vision::Line_LinePoint*>(&::bites::vision::Line_LinePoint::default_instance());
  thinnest_vert_point_ = const_cast< ::bites::vision::Line_LinePoint*>(&::bites::vision::Line_LinePoint::default_instance());
  thickest_vert_point_ = const_cast< ::bites::vision::Line_LinePoint*>(&::bites::vision::Line_LinePoint::default_instance());
  db_ = const_cast< ::bites::vision::DistanceBearing*>(&::bites::vision::DistanceBearing::default_instance());
}

Line::Line(const Line& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    angle_(0),
    a_(0),
    b_(0),
    length_(0),
    avg_vertical_width_(0),
    avg_horizontal_width_(0),
    thinnest_hor_point_(NULL),
    thickest_hor_point_(NULL),
    thinnest_vert_point_(NULL),
    thickest_vert_point_(NULL),
    db_(NULL),
    cc_line_(false) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Line::~Line() {
  if (this != default_instance_) {
    delete self_;
    delete thinnest_hor_point_;
    delete thickest_hor_point_;
    delete thinnest_vert_point_;
    delete thickest_vert_point_;
    delete db_;
  }
}

const ::google::protobuf::Descriptor* Line::descriptor() {
  if (Line_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Line_descriptor_;
}

const Line& Line::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Line* Line::default_instance_ = NULL;

Line* Line::New() const {
  return new Line;
}

const ::google::protobuf::Descriptor* Line::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Line::GetReflection() const {
  if (Line_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Line_reflection_;
}

// ===================================================================

const ::google::protobuf::EnumDescriptor* Corner_Shape_descriptor() {
  if (Corner_Shape_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Corner_Shape_descriptor_;
}
bool Corner_Shape_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Corner_Shape Corner::INNER_L;
const Corner_Shape Corner::OUTER_L;
const Corner_Shape Corner::T;
const Corner_Shape Corner::CIRCLE;
const Corner_Shape Corner::UNKNOWN;
const Corner_Shape Corner::Shape_MIN;
const Corner_Shape Corner::Shape_MAX;
#endif  // _MSC_VER







::google::protobuf::internal::ExtensionIdentifier< ::bites::vision::Landmark,
  ::google::protobuf::internal::EnumTypeTraits< ::bites::vision::Corner_Shape > > Corner::corner_type(12);
::google::protobuf::internal::ExtensionIdentifier< ::bites::vision::Landmark,
  ::google::protobuf::internal::RepeatedMessageTypeTraits< ::bites::vision::Landmark > > Corner::corner_lines(13);
Corner::Corner()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    detect_(NULL),
    angle_between_lines_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Corner::InitAsDefaultInstance() {  self_ = const_cast< ::bites::vision::Landmark*>(&::bites::vision::Landmark::default_instance());
  detect_ = const_cast< ::bites::vision::Detection*>(&::bites::vision::Detection::default_instance());
}

Corner::Corner(const Corner& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    detect_(NULL),
    angle_between_lines_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Corner::~Corner() {
  if (this != default_instance_) {
    delete self_;
    delete detect_;
  }
}

const ::google::protobuf::Descriptor* Corner::descriptor() {
  if (Corner_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Corner_descriptor_;
}

const Corner& Corner::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Corner* Corner::default_instance_ = NULL;

Corner* Corner::New() const {
  return new Corner;
}

const ::google::protobuf::Descriptor* Corner::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Corner::GetReflection() const {
  if (Corner_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Corner_reflection_;
}

// ===================================================================





Cross::Cross()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    detect_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Cross::InitAsDefaultInstance() {  self_ = const_cast< ::bites::vision::Landmark*>(&::bites::vision::Landmark::default_instance());
  detect_ = const_cast< ::bites::vision::Detection*>(&::bites::vision::Detection::default_instance());
  bounds_ = const_cast< ::bites::Rectangle*>(&::bites::Rectangle::default_instance());
}

Cross::Cross(const Cross& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    detect_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Cross::~Cross() {
  if (this != default_instance_) {
    delete self_;
    delete detect_;
    delete bounds_;
  }
}

const ::google::protobuf::Descriptor* Cross::descriptor() {
  if (Cross_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Cross_descriptor_;
}

const Cross& Cross::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Cross* Cross::default_instance_ = NULL;

Cross* Cross::New() const {
  return new Cross;
}

const ::google::protobuf::Descriptor* Cross::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Cross::GetReflection() const {
  if (Cross_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Cross_reflection_;
}

// ===================================================================



CrossBar::CrossBar()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void CrossBar::InitAsDefaultInstance() {  detect_ = const_cast< ::bites::vision::Detection*>(&::bites::vision::Detection::default_instance());
  bounds_ = const_cast< ::bites::Rectangle*>(&::bites::Rectangle::default_instance());
}

CrossBar::CrossBar(const CrossBar& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

CrossBar::~CrossBar() {
  if (this != default_instance_) {
    delete detect_;
    delete bounds_;
  }
}

const ::google::protobuf::Descriptor* CrossBar::descriptor() {
  if (CrossBar_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return CrossBar_descriptor_;
}

const CrossBar& CrossBar::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

CrossBar* CrossBar::default_instance_ = NULL;

CrossBar* CrossBar::New() const {
  return new CrossBar;
}

const ::google::protobuf::Descriptor* CrossBar::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* CrossBar::GetReflection() const {
  if (CrossBar_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return CrossBar_reflection_;
}

// ===================================================================




FieldObject::FieldObject()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    possibles_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void FieldObject::InitAsDefaultInstance() {  self_ = const_cast< ::bites::vision::Landmark*>(&::bites::vision::Landmark::default_instance());
  possibles_ = const_cast< ::bites::vision::Landmark*>(&::bites::vision::Landmark::default_instance());
  bounds_ = const_cast< ::bites::Rectangle*>(&::bites::Rectangle::default_instance());
}

FieldObject::FieldObject(const FieldObject& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    self_(NULL),
    possibles_(NULL),
    bounds_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

FieldObject::~FieldObject() {
  if (this != default_instance_) {
    delete self_;
    delete possibles_;
    delete bounds_;
  }
}

const ::google::protobuf::Descriptor* FieldObject::descriptor() {
  if (FieldObject_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return FieldObject_descriptor_;
}

const FieldObject& FieldObject::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

FieldObject* FieldObject::default_instance_ = NULL;

FieldObject* FieldObject::New() const {
  return new FieldObject;
}

const ::google::protobuf::Descriptor* FieldObject::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* FieldObject::GetReflection() const {
  if (FieldObject_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return FieldObject_reflection_;
}

// ===================================================================






Robot::Robot()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    bounds_(NULL),
    back_left_(0),
    back_right_(0),
    back_dir_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Robot::InitAsDefaultInstance() {  detect_ = const_cast< ::bites::vision::Detection*>(&::bites::vision::Detection::default_instance());
  bounds_ = const_cast< ::bites::Rectangle*>(&::bites::Rectangle::default_instance());
}

Robot::Robot(const Robot& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    bounds_(NULL),
    back_left_(0),
    back_right_(0),
    back_dir_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Robot::~Robot() {
  if (this != default_instance_) {
    delete detect_;
    delete bounds_;
  }
}

const ::google::protobuf::Descriptor* Robot::descriptor() {
  if (Robot_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Robot_descriptor_;
}

const Robot& Robot::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Robot* Robot::default_instance_ = NULL;

Robot* Robot::New() const {
  return new Robot;
}

const ::google::protobuf::Descriptor* Robot::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Robot::GetReflection() const {
  if (Robot_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Robot_reflection_;
}

// ===================================================================




Ball::Ball()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    radius_(0),
    confidence_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Ball::InitAsDefaultInstance() {  detect_ = const_cast< ::bites::vision::Detection*>(&::bites::vision::Detection::default_instance());
}

Ball::Ball(const Ball& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    detect_(NULL),
    radius_(0),
    confidence_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Ball::~Ball() {
  if (this != default_instance_) {
    delete detect_;
  }
}

const ::google::protobuf::Descriptor* Ball::descriptor() {
  if (Ball_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Ball_descriptor_;
}

const Ball& Ball::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Ball* Ball::default_instance_ = NULL;

Ball* Ball::New() const {
  return new Ball;
}

const ::google::protobuf::Descriptor* Ball::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Ball::GetReflection() const {
  if (Ball_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Ball_reflection_;
}

// ===================================================================







Frame::Frame()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    image_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void Frame::InitAsDefaultInstance() {  image_ = const_cast< ::bites::vision::Image*>(&::bites::vision::Image::default_instance());
}

Frame::Frame(const Frame& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    image_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Frame::~Frame() {
  if (this != default_instance_) {
    delete image_;
  }
}

const ::google::protobuf::Descriptor* Frame::descriptor() {
  if (Frame_descriptor_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Frame_descriptor_;
}

const Frame& Frame::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return *default_instance_;
}

Frame* Frame::default_instance_ = NULL;

Frame* Frame::New() const {
  return new Frame;
}

const ::google::protobuf::Descriptor* Frame::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Frame::GetReflection() const {
  if (Frame_reflection_ == NULL) protobuf_BuildDesc_vision_2eproto();
  return Frame_reflection_;
}

}  // namespace vision
}  // namespace bites
