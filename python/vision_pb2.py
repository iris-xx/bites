#!/usr/bin/python2.4
# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2


_IMAGE_ENCODING = descriptor.EnumDescriptor(
  name='Encoding',
  full_name='bites.vision.Image.Encoding',
  filename='Encoding',
  values=[
    descriptor.EnumValueDescriptor(
      name='YCbCr', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YUV422', index=1, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='RGB', index=2, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BMP', index=3, number=4,
      options=None,
      type=None),
  ],
  options=None,
)

_LANDMARK_ID = descriptor.EnumDescriptor(
  name='ID',
  full_name='bites.vision.Landmark.ID',
  filename='ID',
  values=[
    descriptor.EnumValueDescriptor(
      name='L_INNER_CORNER', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='L_OUTER_CORNER', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='T_CORNER', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CENTER_CIRCLE', index=3, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_T', index=4, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_T', index=5, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_RIGHT_L_OR_YELLOW_GOAL_LEFT_L', index=6, number=6,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_LEFT_L_OR_YELLOW_GOAL_RIGHT_L', index=7, number=7,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_CORNER_TOP_L_OR_YELLOW_CORNER_BOTTOM_L', index=8, number=8,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_CORNER_BOTTOM_L_OR_YELLOW_CORNER_TOP_L', index=9, number=9,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CORNER_INNER_L', index=10, number=10,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GOAL_BOX_INNER_L', index=11, number=11,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_OUTER_L', index=12, number=12,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_OUTER_L', index=13, number=13,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CENTER_T', index=14, number=14,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_CORNER_TOP_L', index=15, number=15,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_CORNER_BOTTOM_L', index=16, number=16,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_LEFT_T', index=17, number=17,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_RIGHT_T', index=18, number=18,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_LEFT_L', index=19, number=19,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_RIGHT_L', index=20, number=20,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CENTER_BOTTOM_T', index=21, number=21,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CENTER_TOP_T', index=22, number=22,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_CORNER_BOTTOM_L', index=23, number=23,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_CORNER_TOP_L', index=24, number=24,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_LEFT_T', index=25, number=25,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_RIGHT_T', index=26, number=26,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_LEFT_L', index=27, number=27,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_RIGHT_L', index=28, number=28,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CORNER_NO_IDEA_ID', index=29, number=29,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='TOP_CC', index=30, number=30,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BOTTOM_CC', index=31, number=31,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_LEFT_POST', index=32, number=40,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_RIGHT_POST', index=33, number=41,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_LEFT_POST', index=34, number=42,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_RIGHT_POST', index=35, number=43,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_POST', index=36, number=44,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_POST', index=37, number=45,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='UNKNOWN_FIELD_OBJECT', index=38, number=46,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='UNKNOWN_LINE', index=39, number=50,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SIDE_OR_ENDLINE', index=40, number=51,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SIDELINE_LINE', index=41, number=52,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ENDLINE_LINE', index=42, number=53,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GOALBOX_LINE', index=43, number=54,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GOALBOX_SIDE_LINE', index=44, number=55,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GOALBOX_TOP_LINE', index=45, number=56,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_ENDLINE', index=46, number=57,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_ENDLINE', index=47, number=58,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_YELLOW_SIDELINE', index=48, number=59,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_BLUE_SIDELINE', index=49, number=60,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CENTER_FIELD_LINE', index=50, number=61,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOALBOX_TOP_LINE', index=51, number=62,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOALBOX_LEFT_LINE', index=52, number=63,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOALBOX_RIGHT_LINE', index=53, number=64,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOALBOX_TOP_LINE', index=54, number=65,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOALBOX_LEFT_LINE', index=55, number=65,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOALBOX_RIGHT_LINE', index=56, number=66,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BLUE_GOAL_CROSS', index=57, number=80,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='YELLOW_GOAL_CROSS', index=58, number=81,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ABSTRACT_CROSS', index=59, number=82,
      options=None,
      type=None),
  ],
  options=None,
)

_LANDMARK_IDCERTAINTY = descriptor.EnumDescriptor(
  name='IDCertainty',
  full_name='bites.vision.Landmark.IDCertainty',
  filename='IDCertainty',
  values=[
    descriptor.EnumValueDescriptor(
      name='NOT_SURE', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='MILDY_SURE', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='_SURE', index=2, number=2,
      options=None,
      type=None),
  ],
  options=None,
)

_LANDMARK_DISTANCECERTAINTY = descriptor.EnumDescriptor(
  name='DistanceCertainty',
  full_name='bites.vision.Landmark.DistanceCertainty',
  filename='DistanceCertainty',
  values=[
    descriptor.EnumValueDescriptor(
      name='BOTH_UNSURE', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='WIDTH_UNSURE', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='HEIGHT_UNSURE', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='BOTH_SURE', index=3, number=3,
      options=None,
      type=None),
  ],
  options=None,
)

_LINE_SCANDIRECTION = descriptor.EnumDescriptor(
  name='ScanDirection',
  full_name='bites.vision.Line.ScanDirection',
  filename='ScanDirection',
  values=[
    descriptor.EnumValueDescriptor(
      name='HORIZONTAL', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='VERTICAL', index=1, number=1,
      options=None,
      type=None),
  ],
  options=None,
)

_CORNER_SHAPE = descriptor.EnumDescriptor(
  name='Shape',
  full_name='bites.vision.Corner.Shape',
  filename='Shape',
  values=[
    descriptor.EnumValueDescriptor(
      name='INNER_L', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='OUTER_L', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='T', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CIRCLE', index=3, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=4, number=4,
      options=None,
      type=None),
  ],
  options=None,
)


_IMAGE = descriptor.Descriptor(
  name='Image',
  full_name='bites.vision.Image',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='encoding', full_name='bites.vision.Image.encoding', index=0,
      number=1, type=14, cpp_type=8, label=2,
      default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='width', full_name='bites.vision.Image.width', index=1,
      number=2, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='height', full_name='bites.vision.Image.height', index=2,
      number=3, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='data', full_name='bites.vision.Image.data', index=3,
      number=4, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _IMAGE_ENCODING,
  ],
  options=None)


_LANDMARK = descriptor.Descriptor(
  name='Landmark',
  full_name='bites.vision.Landmark',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='id', full_name='bites.vision.Landmark.id', index=0,
      number=1, type=14, cpp_type=8, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='field_x', full_name='bites.vision.Landmark.field_x', index=1,
      number=2, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='field_y', full_name='bites.vision.Landmark.field_y', index=2,
      number=3, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='id_certainty', full_name='bites.vision.Landmark.id_certainty', index=3,
      number=4, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='distance_certainty', full_name='bites.vision.Landmark.distance_certainty', index=4,
      number=5, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _LANDMARK_ID,
    _LANDMARK_IDCERTAINTY,
    _LANDMARK_DISTANCECERTAINTY,
  ],
  options=None)


_DISTANCEBEARING = descriptor.Descriptor(
  name='DistanceBearing',
  full_name='bites.vision.DistanceBearing',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='distance', full_name='bites.vision.DistanceBearing.distance', index=0,
      number=1, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bearing', full_name='bites.vision.DistanceBearing.bearing', index=1,
      number=2, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='distance_sd', full_name='bites.vision.DistanceBearing.distance_sd', index=2,
      number=3, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bearing_sd', full_name='bites.vision.DistanceBearing.bearing_sd', index=3,
      number=4, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_DETECTION = descriptor.Descriptor(
  name='Detection',
  full_name='bites.vision.Detection',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='x', full_name='bites.vision.Detection.x', index=0,
      number=1, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='y', full_name='bites.vision.Detection.y', index=1,
      number=2, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='width', full_name='bites.vision.Detection.width', index=2,
      number=3, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='height', full_name='bites.vision.Detection.height', index=3,
      number=4, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='center_x', full_name='bites.vision.Detection.center_x', index=4,
      number=5, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='center_y', full_name='bites.vision.Detection.center_y', index=5,
      number=6, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='angle_x', full_name='bites.vision.Detection.angle_x', index=6,
      number=7, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='angle_y', full_name='bites.vision.Detection.angle_y', index=7,
      number=8, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='foc_dist', full_name='bites.vision.Detection.foc_dist', index=8,
      number=9, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='elevation', full_name='bites.vision.Detection.elevation', index=9,
      number=10, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='db', full_name='bites.vision.Detection.db', index=10,
      number=11, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_LINE_LINEPOINT = descriptor.Descriptor(
  name='LinePoint',
  full_name='bites.vision.Line.LinePoint',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='x', full_name='bites.vision.Line.LinePoint.x', index=0,
      number=1, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='y', full_name='bites.vision.Line.LinePoint.y', index=1,
      number=2, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='line_width', full_name='bites.vision.Line.LinePoint.line_width', index=2,
      number=3, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='distance', full_name='bites.vision.Line.LinePoint.distance', index=3,
      number=4, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='found_with_scan', full_name='bites.vision.Line.LinePoint.found_with_scan', index=4,
      number=5, type=14, cpp_type=8, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)

_LINE = descriptor.Descriptor(
  name='Line',
  full_name='bites.vision.Line',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='self', full_name='bites.vision.Line.self', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='possibles', full_name='bites.vision.Line.possibles', index=1,
      number=2, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='points', full_name='bites.vision.Line.points', index=2,
      number=3, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='angle', full_name='bites.vision.Line.angle', index=3,
      number=4, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='a', full_name='bites.vision.Line.a', index=4,
      number=5, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='b', full_name='bites.vision.Line.b', index=5,
      number=6, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='length', full_name='bites.vision.Line.length', index=6,
      number=7, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='avg_vertical_width', full_name='bites.vision.Line.avg_vertical_width', index=7,
      number=8, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='avg_horizontal_width', full_name='bites.vision.Line.avg_horizontal_width', index=8,
      number=9, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thinnest_hor_point', full_name='bites.vision.Line.thinnest_hor_point', index=9,
      number=10, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thickest_hor_point', full_name='bites.vision.Line.thickest_hor_point', index=10,
      number=11, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thinnest_vert_point', full_name='bites.vision.Line.thinnest_vert_point', index=11,
      number=12, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thickest_vert_point', full_name='bites.vision.Line.thickest_vert_point', index=12,
      number=13, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='db', full_name='bites.vision.Line.db', index=13,
      number=14, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cc_line', full_name='bites.vision.Line.cc_line', index=14,
      number=15, type=8, cpp_type=7, label=2,
      default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
    descriptor.FieldDescriptor(
      name='field_x2', full_name='bites.vision.Line.field_x2', index=0,
      number=10, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='field_y2', full_name='bites.vision.Line.field_y2', index=1,
      number=11, type=2, cpp_type=6, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _LINE_SCANDIRECTION,
  ],
  options=None)


_CORNER = descriptor.Descriptor(
  name='Corner',
  full_name='bites.vision.Corner',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='self', full_name='bites.vision.Corner.self', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='detect', full_name='bites.vision.Corner.detect', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='possibles', full_name='bites.vision.Corner.possibles', index=2,
      number=3, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lines', full_name='bites.vision.Corner.lines', index=3,
      number=4, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='dists', full_name='bites.vision.Corner.dists', index=4,
      number=5, type=2, cpp_type=6, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='t_lines', full_name='bites.vision.Corner.t_lines', index=5,
      number=6, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='angle_between_lines', full_name='bites.vision.Corner.angle_between_lines', index=6,
      number=7, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
    descriptor.FieldDescriptor(
      name='corner_type', full_name='bites.vision.Corner.corner_type', index=0,
      number=12, type=14, cpp_type=8, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='corner_lines', full_name='bites.vision.Corner.corner_lines', index=1,
      number=13, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=True, extension_scope=None,
      options=None),
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _CORNER_SHAPE,
  ],
  options=None)


_CROSS = descriptor.Descriptor(
  name='Cross',
  full_name='bites.vision.Cross',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='self', full_name='bites.vision.Cross.self', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='detect', full_name='bites.vision.Cross.detect', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='possibles', full_name='bites.vision.Cross.possibles', index=2,
      number=3, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bounds', full_name='bites.vision.Cross.bounds', index=3,
      number=4, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_CROSSBAR = descriptor.Descriptor(
  name='CrossBar',
  full_name='bites.vision.CrossBar',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='detect', full_name='bites.vision.CrossBar.detect', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bounds', full_name='bites.vision.CrossBar.bounds', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FIELDOBJECT = descriptor.Descriptor(
  name='FieldObject',
  full_name='bites.vision.FieldObject',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='self', full_name='bites.vision.FieldObject.self', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='possibles', full_name='bites.vision.FieldObject.possibles', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bounds', full_name='bites.vision.FieldObject.bounds', index=2,
      number=3, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ROBOT = descriptor.Descriptor(
  name='Robot',
  full_name='bites.vision.Robot',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='detect', full_name='bites.vision.Robot.detect', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='bounds', full_name='bites.vision.Robot.bounds', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='back_left', full_name='bites.vision.Robot.back_left', index=2,
      number=3, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='back_right', full_name='bites.vision.Robot.back_right', index=3,
      number=4, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='back_dir', full_name='bites.vision.Robot.back_dir', index=4,
      number=5, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_BALL = descriptor.Descriptor(
  name='Ball',
  full_name='bites.vision.Ball',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='detect', full_name='bites.vision.Ball.detect', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='radius', full_name='bites.vision.Ball.radius', index=1,
      number=2, type=2, cpp_type=6, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='confidence', full_name='bites.vision.Ball.confidence', index=2,
      number=3, type=5, cpp_type=1, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FRAME = descriptor.Descriptor(
  name='Frame',
  full_name='bites.vision.Frame',
  filename='vision.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='image', full_name='bites.vision.Frame.image', index=0,
      number=1, type=11, cpp_type=10, label=1,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='balls', full_name='bites.vision.Frame.balls', index=1,
      number=2, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='objects', full_name='bites.vision.Frame.objects', index=2,
      number=3, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lines', full_name='bites.vision.Frame.lines', index=3,
      number=4, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='corners', full_name='bites.vision.Frame.corners', index=4,
      number=5, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='robots', full_name='bites.vision.Frame.robots', index=5,
      number=6, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)

import structs_pb2

_IMAGE.fields_by_name['encoding'].enum_type = _IMAGE_ENCODING
_LANDMARK.fields_by_name['id'].enum_type = _LANDMARK_ID
_LANDMARK.fields_by_name['id_certainty'].enum_type = _LANDMARK_IDCERTAINTY
_LANDMARK.fields_by_name['distance_certainty'].enum_type = _LANDMARK_DISTANCECERTAINTY
_DETECTION.fields_by_name['db'].message_type = _DISTANCEBEARING
_LINE_LINEPOINT.fields_by_name['found_with_scan'].enum_type = _LINE_SCANDIRECTION
_LINE.fields_by_name['self'].message_type = _LANDMARK
_LINE.fields_by_name['possibles'].message_type = _LANDMARK
_LINE.fields_by_name['points'].message_type = _LINE_LINEPOINT
_LINE.fields_by_name['thinnest_hor_point'].message_type = _LINE_LINEPOINT
_LINE.fields_by_name['thickest_hor_point'].message_type = _LINE_LINEPOINT
_LINE.fields_by_name['thinnest_vert_point'].message_type = _LINE_LINEPOINT
_LINE.fields_by_name['thickest_vert_point'].message_type = _LINE_LINEPOINT
_LINE.fields_by_name['db'].message_type = _DISTANCEBEARING
_CORNER.fields_by_name['self'].message_type = _LANDMARK
_CORNER.fields_by_name['detect'].message_type = _DETECTION
_CORNER.fields_by_name['possibles'].message_type = _LANDMARK
_CORNER.fields_by_name['lines'].message_type = _LINE
_CORNER.fields_by_name['t_lines'].message_type = _LINE
_CROSS.fields_by_name['self'].message_type = _LANDMARK
_CROSS.fields_by_name['detect'].message_type = _DETECTION
_CROSS.fields_by_name['possibles'].message_type = _LANDMARK
_CROSS.fields_by_name['bounds'].message_type = structs_pb2._RECTANGLE
_CROSSBAR.fields_by_name['detect'].message_type = _DETECTION
_CROSSBAR.fields_by_name['bounds'].message_type = structs_pb2._RECTANGLE
_FIELDOBJECT.fields_by_name['self'].message_type = _LANDMARK
_FIELDOBJECT.fields_by_name['possibles'].message_type = _LANDMARK
_FIELDOBJECT.fields_by_name['bounds'].message_type = structs_pb2._RECTANGLE
_ROBOT.fields_by_name['detect'].message_type = _DETECTION
_ROBOT.fields_by_name['bounds'].message_type = structs_pb2._RECTANGLE
_BALL.fields_by_name['detect'].message_type = _DETECTION
_FRAME.fields_by_name['image'].message_type = _IMAGE
_FRAME.fields_by_name['balls'].message_type = _BALL
_FRAME.fields_by_name['objects'].message_type = _FIELDOBJECT
_FRAME.fields_by_name['lines'].message_type = _LINE
_FRAME.fields_by_name['corners'].message_type = _CORNER
_FRAME.fields_by_name['robots'].message_type = _ROBOT

class Image(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _IMAGE

class Landmark(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LANDMARK

class DistanceBearing(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _DISTANCEBEARING

class Detection(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _DETECTION

class Line(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class LinePoint(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _LINE_LINEPOINT
  DESCRIPTOR = _LINE

class Corner(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CORNER

class Cross(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CROSS

class CrossBar(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CROSSBAR

class FieldObject(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FIELDOBJECT

class Robot(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ROBOT

class Ball(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _BALL

class Frame(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FRAME

Landmark.RegisterExtension(_LINE.extensions_by_name['field_x2'])
Landmark.RegisterExtension(_LINE.extensions_by_name['field_y2'])
_CORNER.extensions_by_name['corner_type'].enum_type = _CORNER_SHAPE
Landmark.RegisterExtension(_CORNER.extensions_by_name['corner_type'])
_CORNER.extensions_by_name['corner_lines'].message_type = _LANDMARK
Landmark.RegisterExtension(_CORNER.extensions_by_name['corner_lines'])
